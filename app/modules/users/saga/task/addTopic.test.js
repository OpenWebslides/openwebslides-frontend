// @flow

import { expectSaga } from 'redux-saga-test-plan';
import * as matchers from 'redux-saga-test-plan/matchers';

import asyncRequests from 'modules/asyncRequests';

import actions from '../../actions';

import { sagas } from '..';

describe(`addTopic`, (): void => {

  let dummyUserId: string;
  let dummyTopicId: string;
  let dummyTitle: string;
  let dummyDescription: string;

  beforeEach((): void => {
    dummyUserId = 'dummyUserId';
    dummyTopicId = 'dummyTopicId';
    dummyTitle = 'Lorem ipsum';
    dummyDescription = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.';
  });

  it(`puts a topics CREATE action containing the passed title and description, then puts a users ADD_TOPIC_ID action containing the id generated by the api`, (): void => {
    const dummyAction = actions.addTopic(dummyUserId, dummyTitle, dummyDescription);

    return expectSaga(sagas.addTopic, dummyAction)
      .provide([
        [matchers.call.fn(asyncRequests.lib.putAndReturn), { id: dummyTopicId }],
      ])
      .put(actions.addTopicId(dummyUserId, dummyTopicId))
      .run();
  });

});
